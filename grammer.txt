1. Program -> Declaration-list
2. Declaration-list -> Declaration Declaration-list | EPSILON
3. Declaration -> Declaration-initial Declaration-prime
4. Declaration-initial -> Type-specifier ID
5. Declaration-prime -> Fun-declaration-prime | Var-declaration-prime
6. Var-declaration-prime -> ; | [ NUM ] ;
7. Fun-declaration-prime -> (Params) Compound-stmt
8. Type-specifier -> int | void
9. Params -> int ID Param-prime Param-list | void
10. Param-list -> , Param Param-list | EPSILON
11. Param -> Declaration-initial Param-prime
12. Param-prime -> [] | EPSILON
13. Compound-stmt -> {Declaration-list Statement-list}
14. Statement-list -> Statement Statement-list | EPSILON
15. Statement -> Expression-stmt | Compound-stmt | Selection-stmt | Iteration-stmt | Return-stmt
16. Expression-stmt -> Expression ; | break ; | ;
17. Selection-stmt -> if (Expression) Statement else Statement
18. Iteration-stmt -> repeat Statement until(Expression)
19. Return-stmt -> return Return-stmt-prime
20. Return-stmt-prime -> ; | Expression ;
21. Expression -> Simple-expression-zegond | ID B
22. B -> = Expression | [Expression] H | Simple-expression-prime
23. H -> = Expression | G D C
24. Simple-expression-zegond -> Additive-expression-zegond C
25. Simple-expression-prime -> Additive-expression-prime C
26. C -> Relop Additive-expression | EPSILON
27. Relop -> < | ==
28. Additive-expression -> Term D
29. Additive-expression-prime -> Term-prime D
30. Additive-expression-zegond -> Term-zegond D
31. D -> Addop Term D | EPSILON
32. Addop -> + | -
33. Term -> Factor G
34. Term-prime -> Factor-prime G
35. Term-zegond -> Factor-zegond G
36. G -> * Factor G | EPSILON
37. Factor -> (Expression) | ID Var-call-prime | NUM
38. Var-call-prime -> (Args) | Var-prime
39. Var-prime -> [Expression] | EPSILON
40. Factor-prime -> (Args) | EPSILON
41. Factor-zegond -> (Expression) | NUM
42. Args -> Arg-list | EPSILON
43. Arg-list -> Expression Arg-list-prime
44. Arg-list-prime -> , Expression Arg-list-prime | EPSILON
